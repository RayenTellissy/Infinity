generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Users {
  id            String          @id @default(cuid())
  username      String          @unique
  email         String          @unique
  password      String
  image         String?
  created_at    DateTime        @default(now())
  videos        Videos[]
  videoLikes    VideoLikes[]
  videoDislikes VideoDislikes[]
  videoComments VideoComments[]
  videoViews    VideoViews[]
  subscribedTo  Subscribers[]   @relation("subscribedTo")
  subscribers   Subscribers[]   @relation("subscribers")
}

model Subscribers {
  id           String @id @default(cuid())
  subscriber   Users  @relation("subscribedTo", fields: [subscriberId], references: [id])
  subscriberId String
  subscribed   Users  @relation("subscribers", fields: [subscribedId], references: [id])
  subscribedId String

  @@unique([subscriberId, subscribedId])
}

model Videos {
  id          String          @id @default(cuid())
  title       String
  description String?
  thumbnail   String
  duration    Int
  visibility  Visibility
  owner       Users           @relation(fields: [ownerId], references: [id])
  ownerId     String
  url         String
  created_at  DateTime        @default(now())
  views       VideoViews[]
  likes       VideoLikes[]
  dislikes    VideoDislikes[]
  comments    VideoComments[]
}

model VideoViews {
  id       String @id @default(cuid())
  viewer   Users  @relation(fields: [viewerId], references: [id])
  viewerId String
  video    Videos @relation(fields: [videoId], references: [id])
  videoId  String
}

model VideoLikes {
  id      String @id @default(cuid())
  user    Users  @relation(fields: [userId], references: [id])
  userId  String
  video   Videos @relation(fields: [videoId], references: [id])
  videoId String

  @@unique([userId, videoId])
}

model VideoDislikes {
  id      String @id @default(cuid())
  user    Users  @relation(fields: [userId], references: [id])
  userId  String
  video   Videos @relation(fields: [videoId], references: [id])
  videoId String

  @@unique([userId, videoId])
}

model VideoComments {
  id         String   @id @default(cuid())
  user       Users    @relation(fields: [userId], references: [id])
  userId     String
  video      Videos   @relation(fields: [videoId], references: [id])
  videoId    String
  comment    String
  created_at DateTime @default(now())
}

enum Visibility {
  public
  private
}
